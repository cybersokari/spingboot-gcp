package ng.cove.web.data.model

import com.fasterxml.jackson.annotation.JsonIgnore
import com.fasterxml.jackson.databind.PropertyNamingStrategies
import com.fasterxml.jackson.databind.annotation.JsonNaming
import com.mongodb.lang.NonNull
import jakarta.validation.constraints.Future
import org.springframework.data.annotation.Id
import org.springframework.data.annotation.LastModifiedDate
import org.springframework.data.mongodb.core.index.Indexed
import org.springframework.data.mongodb.core.mapping.DBRef
import org.springframework.data.mongodb.core.mapping.Document
import org.springframework.data.mongodb.core.mapping.Field
import java.util.*

@Document
@JsonNaming(PropertyNamingStrategies.SnakeCaseStrategy::class)
class Access {

    @Id
    var id: AccessId? = null

    @field:Field("head_count")
    var headCount: Int = 1

    @field:NonNull
    @field:Indexed
    @DBRef(lazy = true)
    var host: Member? = null

    @field:Indexed
    @field:Field("checked_in_at")
    var checkedInAt: Date? = null

    @field:Field("checked_out_at")
    val checkedOutAt: Date? = null

    @DBRef(lazy = true)
    @field:Field("checked_in_by")
    var checkedInBy: SecurityGuard? = null

    @DBRef(lazy = true)
    @field:Field("checked_out_by")
    val checkedOutBy: SecurityGuard? = null

    @field:Field(value = "duration_of_visit")
    var durationOfVisit: Long? = null

    @field:Indexed
    @field:NonNull
    @field:Future(message = "Valid until must be in the future")
    @field:Field("valid_until")
    var validUntil: Date? = null

    //    @field:CreatedDate //Only works if we use autogenerated ID
    @field:Field("created_at")
    var createdAt: Date? = null

    @JsonIgnore
    @field:Field("updated_at")
    @field:LastModifiedDate
    var updatedAt: Date? = null
}